def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.nkn.mobile.app"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
    }

    signingConfigs {
        release {
            String kStoreFile = System.getenv("KEY_STORE_FILE")
            boolean useDebugConf = kStoreFile == null
            println("signingConfigs.release | useDebugConf: $useDebugConf")
            storeFile file(useDebugConf ? KEYSTORE_FILE : kStoreFile)
            storePassword useDebugConf ? KEYSTORE_STOREPWD : System.getenv("KEY_STORE_STORE_PWD")
            keyAlias useDebugConf ? KEYSTORE_ALIAS : System.getenv("KEY_STORE_KEY_ALIAS")
            keyPassword useDebugConf ? KEYSTORE_PASSWORD : System.getenv("KEY_STORE_KEY_PWD")

            println("signingConfigs.storeFile | useDebugConf: $storeFile")
            println("signingConfigs.storePassword | useDebugConf: $storePassword")
            println("signingConfigs.keyAlias | useDebugConf: $keyAlias")
            println("signingConfigs.keyPassword | useDebugConf: $keyPassword")
            v2SigningEnabled true
        }
        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_STOREPWD
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_PASSWORD
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            ndk {
                abiFilters "armeabi-v7a","arm64-v8a"
            }
        }
    }

    packagingOptions{
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/native-image/io.netty/codec-http/native-image.properties'
        exclude 'META-INF/native-image/io.netty/common/native-image.properties'
        exclude 'META-INF/native-image/io.netty/transport/native-image.properties'
        exclude 'META-INF/native-image/io.netty/transport/reflection-config.json'
        exclude 'META-INF/native-image/io.netty/buffer/native-image.properties'
        exclude 'META-INF/native-image/io.netty/handler/native-image.properties'
    }
}

flutter {
    source '../..'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":golib")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.bouncycastle:bcprov-jdk15on:1.64"
    implementation 'com.google.protobuf:protobuf-java:3.11.4'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'io.sentry:sentry-android:3.1.0'
    implementation 'org.slf4j:slf4j-nop:1.7.25'
    implementation 'com.google.api-client:google-api-client:+'
    implementation 'com.google.firebase:firebase-messaging:+'
    implementation platform('com.google.firebase:firebase-bom:25.12.0')
}

apply plugin: 'com.google.gms.google-services'